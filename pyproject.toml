[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11>=2.9.2",
    "cmake>=3.22",
    "scikit-build>=0.14.1",
    "ninja; platform_system!='Windows'",

    # Draft in order to install windows deps via conan
    # "conan>=1.5",
]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"


#####################################
# cibuildwheel
#####################################
[tool.cibuildwheel]
build-verbosity = 1
# Target python versions:
build = ["cp310-*", "cp311-*", "cp312-*", "cp313-*"]
#build = ["cp312-*"]

# Tests
test-requires = "pytest"
test-command = "pytest {project}/tests"

[tool.cibuildwheel.macos]
# identify whether this is a M1 or intel
before-build = "uname -a"
archs = ["arm64"]
environment = {MACOSX_DEPLOYMENT_TARGET= "10.15"}

[tool.cibuildwheel.windows]
archs = ["AMD64"]

[tool.cibuildwheel.linux]
skip = ["*i686"]

# Install dev packages on manylinux:
before-all = "yum install -y libxml2-devel libxslt-devel libarchive-devel openssl-devel libcurl-devel java-1.8.0-openjdk-devel"

[[tool.cibuildwheel.overrides]]
# Install dev packages on musllinux (alpine etc):
select = "*-musllinux*"
# libcurl-dev (no such package)
before-all = "apk add --no-cache libxml2-dev libxslt-dev libarchive-dev openssl-dev openjdk8 curl-dev"
